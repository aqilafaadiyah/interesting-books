{"version":3,"sources":["images/img_11.png","firebase/config.js","components/InterestingBooks.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseDb","database","auth","provider","GoogleAuthProvider","InterestingBooks","useState","username","currentBook","bookAuthor","description","book","setBook","booksFromDb","setBooksFromDb","user","setUser","useEffect","ref","on","snapshot","console","log","val","dataSnapshot","booksFromDb1","key","push","id","title","author","handleChange","e","target","name","value","onAuthStateChanged","className","src","img","alt","width","height","onClick","signOut","then","signInWithPopup","result","photoURL","onSubmit","preventDefault","booksRef","new_book","displayName","email","type","placeholder","onChange","map","bookFromDb","bookId","remove","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e235021.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img_11.69547cf4.png\";","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDM7hv9Grti2V0nvCHPg-_S45ErjHedoQM\",\n  authDomain: \"interesting-books.firebaseapp.com\",\n  projectId: \"interesting-books\",\n  storageBucket: \"interesting-books.appspot.com\",\n  messagingSenderId: \"461287448200\",\n  appId: \"1:461287448200:web:74a640ea72d9a7e3ca893d\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst firebaseDb = firebase.database();\n\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n\nexport { firebaseDb, auth, provider };","import React, { useState, useEffect } from 'react';\nimport img from '../images/img_11.png';\nimport { firebaseDb, auth, provider } from '../firebase/config'\n\nfunction InterestingBooks() {\n\n  const initialValues = {\n    username: \"\",\n    currentBook: \"\",\n    bookAuthor: \"\",\n    description: \"\"\n  }\n\n  const [book, setBook] = useState(initialValues);\n  const [booksFromDb, setBooksFromDb] = useState([]);\n  const [user, setUser] = useState(null);\n\n\n  //retrieve data from database\n  useEffect(() => {\n    const booksRef = firebaseDb.ref('books');\n    booksRef.on('value', (snapshot) => {\n      console.log(snapshot.val());\n      var dataSnapshot = snapshot.val();\n\n      //temporal array to hold curated data from db\n      var booksFromDb1 = [];\n\n      //clean/convert the data from database into an array of dictionaries\n      for (let key in dataSnapshot) {\n        booksFromDb1.push({\n          id: key,\n          title: dataSnapshot[key].title,\n          author: dataSnapshot[key].author,\n          user: dataSnapshot[key].user,\n          description: dataSnapshot[key].description\n        });\n      }\n      console.log(booksFromDb1);\n\n      setBooksFromDb(booksFromDb1)\n    })\n  }, [book, user]);\n\n\n  //tracking inputs\n  const handleChange = (e) => {\n    setBook({\n      ...book,\n      [e.target.name]: e.target.value\n    })\n  }\n  console.log(book);\n\n\n  // submitting to database\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const booksRef = firebaseDb.ref('books');\n\n    var new_book = {\n      title: book.currentBook,\n      author: book.bookAuthor,\n      user: user.displayName || user.email,\n      description: book.description\n    }\n    booksRef.push(new_book);\n\n    console.log('here');\n    //reset input fields to empty\n    setBook({\n      currentBook: '',\n      bookAuthor: '',\n      username: '',\n      description: ''\n    });\n  }\n\n  console.log(booksFromDb);\n\n  //remove book from UI\n  const removeBook = (bookId) => {\n    const booksRef = firebaseDb.ref(`books/${bookId}`);\n    booksRef.remove();\n  }\n\n  // login \n  const login = () => {\n    auth.signInWithPopup(provider)\n      .then((result) => {\n        const user = result.user;\n        setUser(user);\n      });\n  }\n\n\n  //log out\n  const logout = () => {\n    auth.signOut()\n      .then(() => {\n        setUser(null);\n      });\n  }\n\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      }\n    });\n  }, [user])\n\n\n  return (\n    <div className='app'>\n      <header>\n        <div className='wrapper'>\n          <section>\n            <h1>Interesting Books</h1>\n            <img src={img} alt=\"Books logo\" width=\"50\" height=\"50\" />\n          </section>\n          {\n            user ?\n              <button onClick={logout}>Log Out</button>\n              :\n              <button onClick={login}>Log In</button>\n          }\n\n        </div>\n      </header>\n\n      {\n        user ?\n          <div>\n            <div className='user-profile'>\n              <img src={user.photoURL} alt=\"User images\" />\n            </div>\n\n            <div className='container'>\n              <section className=\"add-item\">\n                <form onSubmit={handleSubmit}>\n                  <input type=\"text\" name=\"username\" placeholder=\"Your name?\"\n                    onChange={handleChange}\n                    value={user.displayName || user.email}\n                  />\n\n                  <input type=\"text\" name=\"currentBook\" placeholder=\"Book recommendation?\"\n                    onChange={handleChange}\n                    value={book.currentBook}\n                  />\n\n                  <input type=\"text\" name=\"bookAuthor\" placeholder=\"Book author?\"\n                    onChange={handleChange}\n                    value={book.bookAuthor}\n                  />\n\n                  <textarea name=\"description\" placeholder=\"Why should we read this?\"\n                    value={book.description}\n                    onChange={handleChange} >\n                  </textarea>\n\n                  <button>Add Book</button>\n                </form>\n              </section>\n\n              <section className='display-item'>\n                <div className='wrapper'>\n                  <ul>\n                    {\n                      booksFromDb.map((bookFromDb) => {\n                        return (\n                          <li key={bookFromDb.id}>\n                            <h3>{bookFromDb.title}</h3>\n                            <p>Author: {bookFromDb.author}</p>\n                            <p>Suggested by: {bookFromDb.user}</p>\n                            <p>Description: {bookFromDb.description}</p>\n                            {\n                              bookFromDb.user === user.displayName || bookFromDb.user === user.email\n                                ?\n                                <button onClick={() => removeBook(bookFromDb.id)}>\n                                  Remove Book\n                                </button>\n                                :\n                                null\n                            }\n                          </li>\n                        )\n                      })\n                    }\n                  </ul>\n                </div>\n              </section>\n            </div>\n          </div>\n\n          :\n\n          <div className='wrapper-1'>\n            <p className=\"text-text\">You need be logged in with a google account\n            to see the book list and submit your recommendation.\n            </p>\n\n            <section className='display-item'>\n              <div className='wrapper'>\n                <ul>\n                  {\n                    booksFromDb.map((bookFromDb) => {\n                      return (\n                        <li key={bookFromDb.id}>\n                          <h3>{bookFromDb.title}</h3>\n                          <p>Author: {bookFromDb.author}</p>\n                          <p>Suggested by: {bookFromDb.user}</p>\n                          <p>Description: {bookFromDb.description}</p>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div>\n            </section>\n          </div>\n      }\n    </div>\n\n  );\n}\n\nexport default InterestingBooks;\n","import './App.css';\nimport InterestingBooks from './components/InterestingBooks';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <InterestingBooks />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}